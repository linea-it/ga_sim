##########
QuickStart
##########


*****************
About The Project
*****************

This is a LIneA project to simulate dwarf galaxies and stellar clusters, in order to later test pipelines to detect these stellar substructures in catalogs covering large areas of the sky.

People involved (alphabetic order): Adriano Pieres, Amanda Fassarela, Ana Clara de Paula Moreira, Cristiano Singulani, Cristophe Benoist, Luiz Nicolaci da Costa, Michel Aguena.


***************
Getting Started
***************

Whether you use a jupyter notebook or the python script here, an environment must be created using conda. The code here is intended to run on cluster of LInea, so a few changes should be implemented if you want to run on other environment.

If this is the first time you are running the code in a new environment, please create
a conda environment and install the dependencies, whether using `pip` or `conda`.
Be sure that these libraries are installed without errors. See the information on 'Installation' to a complete list of steps.

*******
Running
*******

After activate the environment, run the code in terminal:
```bash
cd ~/ga_sim
python ga_sim.py
```
Be sure that you are in the same folder as the code cloned.

In case you want to run jupyter notebook:

```bash
jupyter-lab gawazpy.ipynb
```
Restart the jn kernel to load the libraries installed.
Run the jn cell by cell.

<p align="right">(<a href="#top">back to top</a>)</p>

*****
Usage
*****

The actions below are executed:

- Read config file (take a time to check all items in config file) and reddening maps;
- Download the isochrone following age and metalicity in cofig file. Check the connection if you have problems in downloading this file);
- Create a footprint based on limits in RA and DEC. See that limits of footprint follows geodesics in sky (TODO: change to Astropy Heapix instead of Healpy);
- Read catalogs and randomize position of stars in sky to avoid gradients and previous clustered stars. Stars are extinction corrected following the reddening maps;
- Generate a file table with all the features of simulated clusters: positions, masses, distances, exponential radius, ellipticity, angular position, etc (see complete list in code);
- Read photometric errors in specific file to survey (LSST errors came from a fit to DP0 stars; DES errors came from a fit to DES Y6 data);
- Creates (in parallel) a simulated cluster in each HealPixel following the sepcifications in file table of clusters. Each cluster is inserted in a file named with the i pixel. The photometric errors are taken into account to generate stars in simulated clusters;
- Join all the catalogs of stars into a single file with all the simulated stars. This step is optional;
- Use the catalog of stars in each pixel to apply observational bias (in parallel), removing stars that are closer than X arcsecs, in order to mimic the side-effect of group sources very close to each other (blending). In the code, if two sources are very close to each other, both are removed from catalog;
- Join all clear catalogs with stars filtered in;
- Writes features of stars after removing stars close to each other (recounting stars and recalculating absolute magnitude);
- Run a jupyter notebook to make plots and show results more confortably;

